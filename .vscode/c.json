{
	"file header":{
	"prefix": "fhd",
	"body": "/*\n * Copyright (c) HaHa Technologies Co., Ltd. 20${1:22}-20${2:22}. All rights reserved.\n * Description: ${3:文件功能描述}\n * Author: ${4: XXX}\n * Data: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE\n*/$0"
	},
	"multi-line comment":{
	"prefix": "mc",
	"body": "/*\n * ${1:多行注释}\n */$0"
	},
	"single line comment":{
	"prefix": "sc",
	"body": "/* ${1:单行注释} */$0"
	},
	"function comment":{
		"prefix": "fc",
		"body": "/*\n * ${1:函数注释}\n */$0"
	},
	"stub for global variable":{
		"prefix": "stub",
		"body": "${1:int} ${2:g_stub} = 0;\nint wait = (${2:g_stub} != 0) ? ${2:g_stub} : waite;\n"
	},
	"main()":{
	"prefix": "main",
	"body": "int main(int argc, char const *argv[])\n{\n\t$0\n\treturn 0;\n}"
	},
	"For Loop":{
	"prefix": "for",
	"body": "for (${1:int} ${2:i} = ${3:0}; ${2:i} ${4:<} ${5:count}; ${2:i}${6:++}) {\n\t$0\n}"
	},
	"Define and For Loop":{
	"prefix": "dfor",
	"body": "int ${1:i};\nfor (${1:i} = ${2:0}; ${1:i} < ${3:count}; ${1:i}${4:++}) {\n\t$0\n}"
	},
	"Struct":{
	"prefix": "struct",
	"body": "struct ${1:StructName} {\n\t$0\n};"
	},
	"Typedef Struct":{
	"prefix": "typedef struct",
	"body": "typedef struct {\n\t$0\n} ${1:MyCustomType};"
	},
	"Enumeration":{
		"prefix": "enum",
		"body": "enum ${1:EnumType} {\n\t$0\n};"
	},
	"typdef enum":{
		"prefix": "typedef enum",
		"body": "typedef enum {\n\t$0\n} ${1:EnumType};"
	},
	"Do While Loop":{
	"prefix": "do",
	"body": "do {\n\t$0\n} while ($1);"
	},
	"While Loop":{
	"prefix": "while",
	"body": "while ($1) {\n\t$0\n}"
	},
	"If Condition":{
	"prefix": "if",
	"body": "if ($0) {\n\t\n}"
	},
	"Else":{
	"prefix": "else",
	"body": "else {\n\t$0\n}"
	},
	"else if":{
	"prefix": "else if",
	"body": "else if ($0) {\n\t\n}"
	},
	"Switch Statement":{
	"prefix": "switch",
	"body": "switch ($0) {\ncase :\n\t\n\tbreak;\ndefault :\n\t\n\tbreak;\n}"
	},
	"case break":{
	"prefix": "case",
	"body": "case $0:\n\t\n\tbreak;\n"
	},
	"printf":{
	"prefix": "printf",
	"body": "printf(\"${1:%s}\\n\", $2);$3"
	},
	"array size":{
		"prefix": "ARRAY",
		"body": "sizeof(${1:arrayName})/sizeof(${1:arrayName}[0])"
	},
	"MAX":{
		"prefix": "#define MAX",
		"body": "#define MAX(x, y) ((x) > (y) ? (x) : (y))"
	},
	"MIN":{
		"prefix": "#define MIN",
		"body": "#define MIN(x, y) ((x) < (y) ? (x) : (y))"
	},
	"#ifndef … #define … #endif":{
	"prefix": "def",
	"body": "#ifndef ${1:SYMBOL}\n#define $1 ${2:value}\n#endif\t// ${1:SYMBOL}"
	},
	"#include <>":{
	"prefix": "Inc",
	"body": "#include <${1:.h}>"
	},
	"#include \"\"":{
	"prefix": "inc",
	"body": "#include \"${1:.h}\""
	},
	"#pragma mark":{
	"prefix": "mark",
	"body": "#if 0\n${1:#pragma mark -\n}#pragma mark $2\n#endif\n\n$0"
	},
	"Header Include-Guard":{
	"prefix": "once",
	"body": "#ifndef ${1:SYMBOL}\n#define $1\n\n${2}\n\n#endif /* end of include guard: $1 */\n"
	},
	"Typedef":{
	"prefix": "typedef",
	"body": "typedef ${1:int} ${2:MyCustomType};"
	},
	"fprintf":{
	"prefix": "fprintf",
	"body": "fprintf(${1:stderr}, \"${2:%s}\\\\n\", $3);$4"
	},
	"scanf":{
	"prefix": "scanf",
	"body": "scanf(\"${1:%s}\\n\", $2);$3"
	},
	"void":{
	"prefix": "void",
	"body": "void ${1:name}($2) {\n\t$3\n}"
	},
	"any function":{
	"prefix": "func",
	"body": "${1:int} ${2:funcname}($3)\n{\n\t${4:}\n\treturn ${5:0};\n}$0"
	},
	"write file":{
	"prefix": "wf",
	"body": "FILE *${1:fp};\n${1:fp} = fopen (\"${2:filename.txt}\",\"w\");\nif (${1:fp}!=NULL)\n{\n\tfprintf(${1:fp},\"${3:Some String\\\\n}\");\n\tfclose (${1:fp});\n}"
	},
	"read file":{
	"prefix": "rf",
	"body": "FILE *${1:fp};\n${1:fp} = fopen (\"${2:filename.txt}\",\"r\");\nif (${1:fp}!=NULL)\n{\n\tfscanf(${1:fp},\"${3:Some String\\\\n}\", ${3:&var});\n\tfclose (${1:fp});\n}",
	"description": "read file opeartion including fopen, fscanf and fclose."
	},
    "C head common": {
		"prefix": "head file",
        "body": [
			"/***********************************************************************",
			" * @file $TM_FILENAME",
			"     ${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/i}}",
			" * @brief  $2 header file",
			" * @history",
			" * Date       Version Author    description",
			" * ========== ======= ========= =======================================",
			" * $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE V1.0    ${3|Zhou Tao|}   Create",
			" *",
			" * @Copyright (C)  $CURRENT_YEAR  .cdWFVCEL. all right reserved",
			"***********************************************************************/",
			"#ifndef __${1/[.-]/_/g}_h__",
			"#define __${1/[.-]/_/g}_h__",
			"",
			"#ifdef __${1/[.-]/_/g}_h__GLOBAL",
			"\t#define __${1/[.-]/_/g}_h__EXTERN ",
			"#else",
			"\t#define __${1/[.-]/_/g}_h__EXTERN extern",
			"#endif",
			"",
			"$4",
			"#endif // __${1/[.-]/_/g}_h__",
			"",

		],
        "description": "C header file common define"
	},
    "C source common": {
		"prefix": "file template",
        "body": [
			"/*\n * Copyright (c) HaHa Technologies Co., Ltd. 20${22:22}-20${22:22}. All rights reserved.",
			" * Description: ${3:文件功能描述}",
			" * Author: ${4: XXX}",
			" * Data: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\n */$0",
            "#include <stdio.h>",
            "#include <string.h>",     //这个头文件可以删除，我为了使用方便就加了
            "#include <stdlib.h>",
            "#include <stdbool.h>",
            "#include <math.h>",
            "", //空行
            "",
            "int main(int argc, char *argv[])",   //main()函数
            "{",
            "    $0",    //最终光标会在这里等待输入
            "    return 0;", //结束
            "}",
            "",
        ],
        "description": "C source file template"
	},
}